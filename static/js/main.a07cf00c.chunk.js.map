{"version":3,"sources":["components/Ball/index.tsx","App.tsx","index.tsx"],"names":["answers","Ball","useState","randomAnswer","setRandomAnswer","ballRef","useRef","type","onKeyDown","e","key","current","classList","add","ref","className","onAnimationEnd","remove","Math","floor","random","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAGMA,EAAoB,CAAC,yDAAa,+DAAc,8FAClD,kFAAkB,qIAClB,4FAAsB,wFAAmB,gHACzC,wGAAwB,eAAM,kJAC9B,sEAAgB,uHAAyB,+IACzC,wKAAkC,uEAAiB,sFACnD,+GAA0B,4JAAgC,0GAAsB,+CAqCrEC,EAnCQ,WAAO,IAAD,EACeC,qBADf,mBAClBC,EADkB,KACJC,EADI,KAEnBC,EAAUC,iBAAuB,MAqBvC,OACI,qCACI,uBAAOC,KAAK,OAAOC,UArBX,SAACC,GACA,UAAVA,EAAEC,MACYL,EAAQM,QAEhBC,UAAUC,IAAI,SACnBT,EAAgB,cAiBhB,qBAAKU,IAAKT,EAASU,UAAU,OAAOC,eATrB,WAEnBX,EAAQM,QAAQC,UAAUK,OAAO,SALjCb,EAAgBJ,EAAQkB,KAAKC,MAAMD,KAAKE,SAAWpB,EAAQqB,WAYvD,SACI,qBAAKN,UAAU,SAAf,SACI,sBAAMA,UAAU,SAAhB,SAA0BZ,YC1B/BmB,MATf,WACE,OACE,sBAAKP,UAAU,MAAf,UACI,uJACF,cAAC,EAAD,QCJNQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.a07cf00c.chunk.js","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport \"./index.css\";\n\nconst answers: string[] = ['Бесспорно', 'Предрешено', 'Никаких сомнений',\n    'Определённо да', 'Можешь быть уверен в этом',\n    'Мне кажется — «да»', 'Вероятнее всего', 'Хорошие перспективы',\n    'Знаки говорят — «да»', 'Да', 'Пока не ясно, попробуй снова',\n    'Спроси позже', 'Лучше не рассказывать', 'Сейчас нельзя предсказать',\n    'Сконцентрируйся и спроси опять', 'Даже не думай', 'Мой ответ — «нет»',\n    'По моим данным — «нет»', 'Перспективы не очень хорошие', 'Весьма сомнительно', 'Ты пидор']\n\nconst Ball: React.FC = () => {\n    const [randomAnswer, setRandomAnswer] = useState<string>();\n    const ballRef = useRef<HTMLDivElement>(null);\n\n    const onEnter = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if(e.key === 'Enter'){\n            const ball = ballRef.current\n            // @ts-ignore\n            ball.classList.add('shake');\n            setRandomAnswer('......')\n        }\n    }\n\n    const getAnswer = () => {\n        setRandomAnswer(answers[Math.floor(Math.random() * answers.length)])\n    }\n\n    const onAnimationEnd = () => {\n        // @ts-ignore\n        ballRef.current.classList.remove('shake')\n        getAnswer();\n    }\n\n    return (\n        <>\n            <input type=\"text\" onKeyDown={onEnter}/>\n            <div ref={ballRef} className=\"ball\" onAnimationEnd={onAnimationEnd}>\n                <div className=\"square\">\n                    <span className=\"answer\">{randomAnswer}</span>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default Ball;\n","import React from 'react';\nimport './App.css';\nimport Ball from \"./components/Ball\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <h1>Задай свой вопрос шару</h1>\n      <Ball />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}